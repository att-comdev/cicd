
ARTF_URL = env.ARTF_DOCKER_URL

PROMENADE_IMAGE = "${env.ARTF_DOCKER_URL}/attcomdev/promenade:master"
ARMADA_IMAGE = "${env.ARTF_DOCKER_URL}/attcomdev/armada:master"
DRYDOCK_IMAGE = "${env.ARTF_DOCKER_URL}/attcomdev/drydock:master"

CEPH_CHART_REPO = 'https://github.com/sh8121att/helm_charts'
DRYDOCK_CHART_REPO = 'https://github.com/sh8121att/helm_charts'
MAAS_CHART_REPO = 'https://github.com/sh8121att/helm_charts'


def get_iface = {
    cmd = 'echo -n $(ip route | grep \"^default\" | head -1 | awk \'{print $5}\')'
    sh(returnStdout: true, script: cmd)
}

def get_hname = {
    cmd = 'echo -n $(hostname)'
    sh(returnStdout: true, script: cmd)
}

def get_ip = {iface ->
    def cmd = {"ifconfig ${iface} | grep 'inet addr:' | cut -d: -f2 | awk '{ print \$1}'"}
    sh(returnStdout: true, script: cmd(iface)).trim()
}


stage ("Run Integration") {
    node ('genesis-integration-slave') {
        checkout poll: false,
            scm: [$class: 'GitSCM',
            branches: [[name: '$GERRIT_REFSPEC']],
            doGenerateSubmoduleConfigurations: false,
            extensions: [],
            submoduleCfg: [],
            userRemoteConfigs: [[refspec: 'refs/changes/*:refs/changes/*',
                url: 'https://review.gerrithub.io/att-comdev/ucp-integration']]]

        CEPH_CLUSTER_NET = '10.0.0.0/24'
        CEPH_PUBLIC_NET = '10.0.0.0/24'

        NODE_NET_IFACE = 'eth0' // ens3 for VMs

        GENESIS_NODE_IP = get_ip(get_iface())
        GENESIS_NODE_NAME = get_hname()

        MASTER_NODE_IP = '10.0.0.23' // filler for now
        MASTER_NODE_NAME = 'master1' // filler for now

        sh "sudo sh -c 'echo ${GENESIS_NODE_IP} ${GENESIS_NODE_NAME} >> /etc/hosts'"

        withEnv(["CEPH_CLUSTER_NET=${CEPH_CLUSTER_NET}",
                 "CEPH_PUBLIC_NET=${CEPH_PUBLIC_NET}",
                 "NODE_NET_IFACE=${NODE_NET_IFACE}",
                 "GENESIS_NODE_IP=${GENESIS_NODE_IP}",
                 "MASTER_NODE_IP=${MASTER_NODE_IP}",
                 "GENESIS_NODE_NAME=${GENESIS_NODE_NAME}",
                 "MASTER_NODE_NAME=${MASTER_NODE_NAME}",
                 "PROMENADE_IMAGE=${PROMENADE_IMAGE}",
                 "ARMADA_IMAGE=${ARMADA_IMAGE}",
                 "CEPH_CHART_REPO=${CEPH_CHART_REPO}",
                 "DRYDOCK_CHART_REPO=${DRYDOCK_CHART_REPO}",
                 "MAAS_CHART_REPO=${MAAS_CHART_REPO}",
                 "DRYDOCK_IMAGE=${DRYDOCK_IMAGE}"]) {

            dir("${WORKSPACE}/manifests/basic_ucp") {
                timeout (30) {
                    // internal mirror for quay.io and gcr.io
                    sh "sed -i 's/gcr.io/${ARTF_URL}/g' promenade.yaml.sub"
                    sh "sed -i 's/quay.io/${ARTF_URL}/g' promenade.yaml.sub"
                    sh 'cat promenade.yaml.sub'

                    sh 'sudo -E bash deploy_ucp.sh'
                }
            }
        }
    }
}

