iARFT_URL = env.ARTF_DOCKER_URL
NODE_NAME='armada-16.04-slave-'+env.BUILD_NUMBER

try{
    node('master-host'){
        stage('Create Jenkins Node'){
            dir("/home/jenkins/armada"){
                sh "source openrc && openstack stack create -t armada.yaml ${NODE_NAME} && sleep 30"
                NODE_IP=sh(returnStdout: true, script: "source openrc && openstack stack output show -f value -c output_value ${NODE_NAME} floating_ip")
            
                withCredentials([usernamePassword(credentialsId: 'jenkins-token',
                    usernameVariable: 'JENKINS_USER',
                    passwordVariable: 'JENKINS_TOKEN')]) {
                    sh "bash create-node ${NODE_NAME} ${NODE_IP}"
                }
            }
        }
    }
    node(NODE_NAME){
        stage('Checkout'){
                checkout poll: false,
                         scm: [$class: 'GitSCM',
                            branches: [[name: 'master']],
                            doGenerateSubmoduleConfigurations: false,
                            extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'dockerfiles']],
                            submoduleCfg: [],
                            userRemoteConfigs: [[url: 'https://github.com/att-comdev/dockerfiles.git']]]
        }
        
        dir(env.WORKSPACE+"/dockerfiles"){
        stage('Build-DockerImages'){
                     def build = env.BUILD_NUMBER
                     sh "sudo docker build -t dockerfiles/airflow:0.1.0.'+build+' ."                     
            }
        }
        
    }
}  finally {
    stage('Delete Jenkins Node'){
        node('master-host') {
            dir("/home/jenkins/armada") {
               sh "source openrc && openstack stack delete -y $NODE_NAME"
                
                withCredentials([usernamePassword(credentialsId: 'jenkins-token',
                    usernameVariable: 'JENKINS_USER',
                    passwordVariable: 'JENKINS_TOKEN')]) {
    
                     sh "java -jar ${env.JENKINS_CLI} -s ${env.JENKINS_URL} -auth ${env.JENKINS_USER}:${JENKINS_TOKEN} delete-node $NODE_NAME"
                }
            }
        }
    }
}


