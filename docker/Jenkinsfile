ARFT_URL = env.ARTF_DOCKER_URL
NODE_NAME='armada-16.04-slavenode-'+env.BUILD_NUMBER

try{
    node('master-host'){
        stage('Create Jenkins Node'){
            dir("/home/jenkins/armada"){
                sh "source openrc && openstack stack create -t armada.yaml ${NODE_NAME} && sleep 30"
                NODE_IP=sh(returnStdout: true, script: "source openrc && openstack stack output show -f value -c output_value ${NODE_NAME} floating_ip")
            
                withCredentials([usernamePassword(credentialsId: 'jenkins-token',
                    usernameVariable: 'JENKINS_USER',
                    passwordVariable: 'JENKINS_TOKEN')]) {
                    sh "bash create-node ${NODE_NAME} ${NODE_IP}"
                    
                }
            }
        }
    }
    node(NODE_NAME){
                    sh "cd /etc/docker/"
                    json='{"insecure-registries":["12.37.173.196:5051"]}'
                    sh "echo $json > daemon.json" 
                    sh "sudo systemctl restart docker && echo OK"
                    sh "ls -al"
                    sh "cat daemon.json"
        
        dir(env.WORKSPACE){
            stage('Checkout'){
                checkout poll: false,
                         scm: [$class: 'GitSCM',
                            branches: [[name: 'master']],
                            doGenerateSubmoduleConfigurations: false,
                            extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'dockerfiles']],
                            submoduleCfg: [],
                            userRemoteConfigs: [[refspec: 'refs/changes/*:refs/changes/*',
                                                 url: 'https://github.com/att-comdev/dockerfiles.git']]]
            }
        }
        
        dir(env.WORKSPACE+"/dockerfiles/rabbitmq"){
        //stage('Build-DockerImages'){
                    //def build = env.BUILD_NUMBER
                    //sh 'echo $(pwd)'
                    //sh "sudo docker build -t rabbitmq:0.0.1 ."                     
            //}
        
        stage('Publish') {           
              sh 'sudo docker login -u admin -p admin123 12.37.173.196:5051'
              sh 'sudo docker tag rabbitmq:0.0.1 12.37.173.196:5051/cicd-docker-local/rabbitmq:0.0.1'
              sh 'sudo docker push --insecure-registry 12.37.173.196:5051/cicd-docker-local//rabbitmq:0.0.1'
           }
        
        }
        
        
    }
}  finally {
    stage('Delete Jenkins Node'){
        node('master-host') {
            dir("/home/jenkins/armada") {
               sh "source openrc && openstack stack delete -y $NODE_NAME"
                
                withCredentials([usernamePassword(credentialsId: 'jenkins-token',
                    usernameVariable: 'JENKINS_USER',
                    passwordVariable: 'JENKINS_TOKEN')]) {
    
                     sh "java -jar ${env.JENKINS_CLI} -s ${env.JENKINS_URL} -auth ${env.JENKINS_USER}:${JENKINS_TOKEN} delete-node $NODE_NAME"
                }
            }
        }
    }
}


