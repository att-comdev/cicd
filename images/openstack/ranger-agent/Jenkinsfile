
IMAGE_TAG= "${GERRIT_PATCHSET_REVISION}"
DOCKER_REGISTRY="${ARTF_DOCKER_URL}"
IMAGE_PREFIX="openstack"
IMAGE_NAME="${IMAGE_PREFIX}/${JOB_BASE_NAME}:${IMAGE_TAG}"
IMAGE_LATEST = "${IMAGE_PREFIX}/${JOB_BASE_NAME}:latest"
QUAY_IMAGE_LATEST="attcomdev/${JOB_BASE_NAME}:latest"
QUAY_IMAGE="attcomdev/${JOB_BASE_NAME}:${IMAGE_TAG}"

IMAGE="${DOCKER_REGISTRY}/${IMAGE_PREFIX}/${JOB_BASE_NAME}:${IMAGE_TAG}"

vm2{
    vm2.setproxy()
    stage('Checkout'){
        sh 'sudo apt-get install make'
        if(env.GERRIT_NEWREV){
            echo ("${GERRIT_NEWREV} is being used to override refspec: ${GERRIT_REFSPEC}")
            IMAGE_TAG=env.GERRIT_NEWREV
            QUAY_IMAGE="attcomdev/${JOB_BASE_NAME}:${IMAGE_TAG}"
        }
        
        IMAGE="${DOCKER_REGISTRY}/${IMAGE_PREFIX}/${JOB_BASE_NAME}:${IMAGE_TAG}"
        gerrit.cloneToBranch("https://git.openstack.org/${IMAGE_PREFIX}/${JOB_BASE_NAME}","${IMAGE_TAG},"")
      
        if (GERRIT_EVENT_TYPE == 'change-merged') {
            gerrit.rebase()
        }

        currentBuild.displayName = "#${BUILD_NUMBER} ${GERRIT_EVENT_TYPE}"
    }

    stage('Docker Build') {
        timeout(20){
            build.makeImages()
        }
    }

    stage('Docker Run') {
        timeout(20){
           sh "sudo docker run ${IMAGE}"
        }
    }

    stage('Publish'){
        publish.artifactory (IMAGE, "${IMAGE_PREFIX}/${JOB_BASE_NAME}:${IMAGE_TAG}.${BUILD_TIMESTAMP}")
        publish.quay (IMAGE, QUAY_IMAGE)
        if (GERRIT_EVENT_TYPE == 'change-merged') {
            publish.artifactory (IMAGE, IMAGE_LATEST)
            publish.quay (IMAGE, QUAY_IMAGE_LATEST)
        }
    }
}