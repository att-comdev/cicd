import groovy.json.JsonSlurper

Map overrideImagesMap = new JsonSlurper().parseText(OVERRIDE_IMAGES)

// OSH AIO requires min 8 cpus cores and 16 GB ram
//vm2('bootstrap.sh',
//    'cicd-ubuntu-16.04-server-cloudimg-amd64',
//    'm1.xlarge',
//    'deploy-osh-aio',
//    'basic',
//    false) {
node(LOCI_BUILD_SLAVE_LABEL) {
    stage('Setup proxy') {
        vm2.setproxy()
    }
    stage('Install docker-ce') {
        osh.installDockerCE()
    }
    stage('Authenticate docker repo') {
        osh.dockerAuth()
    }
    stage('Clone OpenstackHelm') {
        osh.cloneOSH()
    }
    stage('Update OSH proxy') {
        osh.updateProxy()
    }
    stage('Override images') {
        print "Overriding default images with newly created ones..."
        osh.imageOverrides(overrideImagesMap, true)
    }
    stage('Install OSH AIO') {
        try {
            withEnv(['OS_REGION_NAME=',
              'OS_USERNAME=',
              'OS_PASSWORD=',
              'OS_PROJECT_NAME=',
              'OS_PROJECT_DOMAIN_NAME=',
              'OS_USER_DOMAIN_NAME=',
              'OS_AUTH_URL=',
              "OSH_EXTRA_HELM_ARGS=--values=./tools/overrides/releases/ocata/loci.yaml"]) {
                osh.installOSHAIO()
            }
        } catch (Exception exception) {
            osh.artifactLogs()
            error "OSH AIO deployment failed with exception $exception"
        }
    }
    stage('Get openstack versions') {
        osh.serviceVersions(overrideImagesMap, true)
    }
    stage('Run Helm tests') {
        osh.runHelmTests()
    }
    stage('Parse test logs for failures') {
        status = osh.parseTestLogs()
        if (status != 0) {
            osh.artifactLogs()
            error "Helm tests failed... see log $WORKSPACE/artifacts/helm_tests.log"
        } else { print "Helm tests passed" }
    }
}
