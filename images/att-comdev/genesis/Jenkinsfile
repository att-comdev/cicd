JENKINS_VM_LAUNCH='local-vm-launch'
NODE_NAME="${JOB_BASE_NAME}-${BUILD_NUMBER}"
NODE_TMPL="docker/ubuntu.m1.medium.yaml"

artf_ubuntu_repo="https://$ARTF_WEB_URL/ubuntu"
// ipxe repo is a bit slow sometimes, it takes 5-6min to clone full 37MB repo
ipxe_repo="git://git.ipxe.org/ipxe.git"
// that's why here is a snapshot of ipxe repo
ipxe_archive_path="https://artifacts-aic.atlantafoundry.com/artifactory/genesis-build"
ipxe_archive_name="ipxe.20180525.tar.bz2"

/* start of bash scripts */

// Note: iDRAC returns 'HTTP/1.1 204 No Content' in case of success, and 'jq' will return nothing in this case
def power_on = """
echo 'Powering ON Genesis host...'
curl -s -k -u${GENESIS_HOST_OOM_user}:${GENESIS_HOST_OOM_password} \
            -H 'Content-Type: application/json' -X POST \
            -d '{"ResetType": "On"}' \
            https://${GENESIS_HOST_OOM_ip}/redfish/v1/Systems/System.Embedded.1/Actions/ComputerSystem.Reset | jq '.'
"""
def power_off = """
echo 'Powering OFF Genesis host...'
curl -s -k -u${GENESIS_HOST_OOM_user}:${GENESIS_HOST_OOM_password} \
            -H 'Content-Type: application/json' -X POST \
            -d '{"ResetType": "ForceOff"}' \
            https://${GENESIS_HOST_OOM_ip}/redfish/v1/Systems/System.Embedded.1/Actions/ComputerSystem.Reset | jq '.'
"""
def set_boot_from_cd = """
echo 'Setting BootSourceOverrideTarget=Cd on Genesis host...'
curl -s -k -u${GENESIS_HOST_OOM_user}:${GENESIS_HOST_OOM_password} \
            -H 'Content-Type: application/json' -X PATCH \
            -d '{"Boot": {"BootSourceOverrideTarget": "Cd"}}' \
            https://${GENESIS_HOST_OOM_ip}/redfish/v1/Systems/System.Embedded.1 | jq '.'
"""

/* end of bash scripts */

vm(NODE_NAME, NODE_TMPL) {
  stage('Setup environment'){

    sh "sudo sed -i -e 's|nova.clouds.archive.ubuntu.com|$ARTF_WEB_URL|g; s|security.ubuntu.com|$ARTF_WEB_URL|g' /etc/apt/sources.list"
    sh "sudo apt-get update && sudo apt-get install -y gcc make liblzma-dev genisoimage isolinux"

    withCredentials([usernamePassword(credentialsId: 'jenkins-artifactory',
                    usernameVariable: 'REPO_USER',
                    passwordVariable: 'REPO_PASSWORD')]) {
      opts = '-u $REPO_USER:$REPO_PASSWORD'
      sh "curl ${opts} -s -L -O ${ipxe_archive_path}/${ipxe_archive_name}"
    }

    sh "tar -jxf ${ipxe_archive_name}"
    sh "sed -i '/DOWNLOAD_PROTO_HTTPS/ s/^#undef/#define/' ipxe/src/config/general.h && grep DOWNLOAD_PROTO_HTTPS ipxe/src/config/general.h"
    sh "sed -i '/PING_CMD/ s|^//||' ipxe/src/config/general.h && grep PING_CMD ipxe/src/config/general.h"
  }
  stage('Generate iPXE config') {

    //tmpl = libraryResource "genesis/ipxe_boot.cfg.template"
    //writeFile file: 'ipxe_boot.cfg.template', text: tmpl

    withCredentials([usernamePassword(credentialsId: 'jenkins-artifactory',
                    usernameVariable: 'REPO_USER',
                    passwordVariable: 'REPO_PASSWORD')]) {
      opts = '-u $REPO_USER:$REPO_PASSWORD'
      sh "curl ${opts} -s -L -O ${ipxe_archive_path}/ipxe_boot.cfg.template"
    }
    
    sh "envsubst '${ARTF_WEB_URL}:${NETBOOT_URL}:${PRESEED_URL}:${GENESIS_HOST_interface}:${GENESIS_HOST_ip}:${GENESIS_HOST_mask}:${GENESIS_HOST_gw}:${GENESIS_HOST_dns}' < ipxe_boot.cfg.template > ipxe_boot.cfg"
    sh "cat ipxe_boot.cfg"
  }
  stage('Generate and upload preseed config') {

    //tmpl = libraryResource "genesis/preseed.cfg.template"
    //writeFile file: 'preseed.cfg.template', text: tmpl
    
    withCredentials([usernamePassword(credentialsId: 'jenkins-artifactory',
                    usernameVariable: 'REPO_USER',
                    passwordVariable: 'REPO_PASSWORD')]) {
      opts = '-u $REPO_USER:$REPO_PASSWORD'
      sh "curl ${opts} -s -L -O ${ipxe_archive_path}/preseed.cfg.template"
    }

    sh "envsubst '${GENESIS_HOST_ip}:${GENESIS_HOST_mask}:${GENESIS_HOST_gw}:${GENESIS_HOST_dns}' < preseed.cfg.template > preseed-${GENESIS_HOST_ip}.cfg"
    sh "cat preseed-${GENESIS_HOST_ip}.cfg"

    withCredentials([usernamePassword(credentialsId: 'jenkins-artifactory',
                    usernameVariable: 'REPO_USER',
                    passwordVariable: 'REPO_PASSWORD')]) {
      opts = '-u $REPO_USER:$REPO_PASSWORD'
      sh "curl ${opts} -T preseed-${GENESIS_HOST_ip}.cfg \"${ipxe_archive_path}/preseed-${GENESIS_HOST_ip}.cfg\""
    }
  }
  stage('ISO build and upload') {

    dir('ipxe/src/') {
        sh "make -j2 bin/ipxe.iso EMBED=../../ipxe_boot.cfg"
    }
  }
}
