
NODE_NAME="deckhand-${env.BUILD_NUMBER}"
NODE_TMPL = "deckhand/deckhand.yaml"

DECKHAND_VERSION = "0.1.0.${GERRIT_CHANGE_NUMBER}.${GERRIT_PATCHSET_NUMBER}"

DECKHAND_IMAGE = "ucp/deckhand:${DECKHAND_VERSION}"
DECKHAND_IMAGE_PS = "ucp-patchset/deckhand:${DECKHAND_VERSION}"
DECKHAND_IMAGE_LATEST = "ucp/deckhand:latest"

DECKHAND_QUAY_IMAGE = "attcomdev/deckhand:${DECKHAND_VERSION}"
DECKHAND_QUAY_IMAGE_LATEST = "ucp/deckhand:latest"


currentBuild.displayName = "#${BUILD_NUMBER} ${GERRIT_EVENT_TYPE}"


vm(NODE_NAME, NODE_TMPL) {

    stage('Image Build'){
        gerrithub.clone("att-comdev/deckhand", GERRIT_REFSPEC)
        sh 'sudo make build_deckhand'
    }

    stage('Image Publish (artifactory)'){

        if (GERRIT_EVENT_TYPE == 'change-merged') {
            publish.artifactory ('attcomdev/deckhand', DECKHAND_IMAGE)
            publish.artifactory ('attcomdev/deckhand', DECKHAND_IMAGE_LATEST)
        } else {
            publish.artifactory ('attcomdev/deckhand', DECKHAND_IMAGE_PS)
        }
    }

    stage('Image Publish (quay)'){

        // publish.quay ('attcomdev/deckhand', DECKHAND_QUAY_IMAGE)

        if (GERRIT_EVENT_TYPE == 'change-merged') {
            // publish.quay ('attcomdev/deckhand', DECKHAND_QUAY_IMAGE_LATEST)
        }
    }

    stage('Test Functional') {
        withEnv(["DECKHAND_IMAGE=${DECKHAND_IMAGE}",
                 "DECKHAND_API_THREADS=1"]) {
            sh 'tox -e functional'
        }
    }

    stage('Results Publish') {
        publishHTML (target: [
            allowMissing: false,
            alwaysLinkToLastBuild: false,
            keepAll: true,
            reportDir: 'results',
            reportFiles: 'index.html',
            reportName: "Gabbi Functional"
        ])
    }
}

