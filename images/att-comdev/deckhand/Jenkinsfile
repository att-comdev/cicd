
NODE_NAME="deckhand-${env.BUILD_NUMBER}"
NODE_TMPL = "deckhand/deckhand.yaml"

DECKHAND_VERSION = "0.1.0-${GERRIT_CHANGE_NUMBER}"
DECKHAND_PS = "ps${GERRIT_CHANGE_NUMBER}.${GERRIT_PATCHSET_NUMBER}"

ARTF_URL = env.ARTF_DOCKER_URL
DECKHAND_IMAGE_PS = "${ARTF_URL}/ucp-patchset/deckhand:${DECKHAND_PS}"
DECKHAND_IMAGE = "${ARTF_URL}/ucp/deckhand:${DECKHAND_VERSION}"
DECKHAND_IMAGE_LATEST = "${ARTF_URL}/ucp/deckhand:latest"

currentBuild.displayName = "#${BUILD_NUMBER} ${GERRIT_EVENT_TYPE}"


vm(NODE_NAME, NODE_TMPL) {

    stage('Image Build'){
        gerrithub.clone("att-comdev/deckhand", GERRIT_REFSPEC)

        if (GERRIT_EVENT_TYPE != 'change-merged') {
            DECKHAND_IMAGE = DECKHAND_IMAGE_PS
        }

        sh 'sudo make build_deckhand'
        sh "sudo docker tag attcomdev/deckhand ${DECKHAND_IMAGE}"
    }


    stage('Image Publish'){
        withCredentials([usernamePassword(credentialsId: 'jenkins-artifactory',
                usernameVariable: 'ARTIFACTORY_USER',
                passwordVariable: 'ARTIFACTORY_PASSWORD')]) {

            opts = '-u $ARTIFACTORY_USER -p $ARTIFACTORY_PASSWORD'

            sh "sudo docker login ${opts} ${ARTF_URL}"
            sh "sudo docker push ${DECKHAND_IMAGE}"

            if (GERRIT_EVENT_TYPE == 'change-merged') {
                sh "sudo docker tag ${DECKHAND_IMAGE} ${DECKHAND_IMAGE_LATEST}"
                sh "sudo docker push ${DECKHAND_IMAGE_LATEST}"
            }
        }
    }

    stage('Test Functional') {
        withEnv(["DECKHAND_IMAGE=${DECKHAND_IMAGE}",
                 "DECKHAND_API_THREADS=1"]) {
            sh 'tox -e functional'
        }
    }

    stage('Results Publish') {
        publishHTML (target: [
            allowMissing: false,
            alwaysLinkToLastBuild: false,
            keepAll: true,
            reportDir: 'results',
            reportFiles: 'index.html',
            reportName: "Gabbi Functional"
        ])
    }
}