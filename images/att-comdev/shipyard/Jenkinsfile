JENKINS_VM_LAUNCH='local-vm-launch'
NODE_NAME="shipyard-${BUILD_NUMBER}"
NODE_TMPL="integration/genesis-single.yaml"

SHIPYARD_VERSION = "${GERRIT_CHANGE_NUMBER}"
SHIPYARD_PS = "${GERRIT_CHANGE_NUMBER}.${GERRIT_PATCHSET_NUMBER}"
ARTF_URL = env.ARTF_DOCKER_URL
SHIPYARD_IMAGE_PS = "${ARTF_URL}/ucp-patchset/shipyard:${SHIPYARD_PS}"
SHIPYARD_IMAGE = "${ARTF_URL}/ucp/shipyard:${SHIPYARD_VERSION}"
SHIPYARD_IMAGE_LATEST = "${ARTF_URL}/ucp/shipyard:latest"
SHIPYARD_QUAY_IMAGE_LATEST="${QUAY_URL}/attcomdev/shipyard:latest"
PROJECT_REF="${GERRIT_REFSPEC}"
vm(NODE_NAME, NODE_TMPL) {
    if(env.GERRIT_NEWREV){
        echo ("${GERRIT_NEWREV} is being used to override refspec: ${GERRIT_REFSPEC}")
        PROJECT_REF=env.GERRIT_NEWREV
    }
    checkout([$class: 'GitSCM', 
              branches: [[name: PROJECT_REF]], 
              doGenerateSubmoduleConfigurations: false, 
              extensions: [[$class: 'LocalBranch', 
                            localBranch: 'jenkins']], 
                            submoduleCfg: [], 
                            userRemoteConfigs: [[refspec: 'refs/changes/*:refs/changes/*', 
                                                 url: 'https://review.gerrithub.io/att-comdev/shipyard']]])
    
    sh 'git checkout master'
    sh 'git merge jenkins'
    //gerrithub.clone("att-comdev/shipyard", PROJECT_REF)
    sh 'sudo apt-get install make'
    stage('Checkout'){
        if (GERRIT_EVENT_TYPE != 'change-merged') {
            SHIPYARD_IMAGE = SHIPYARD_IMAGE_PS
        }
        currentBuild.displayName = "#${BUILD_NUMBER} ${GERRIT_EVENT_TYPE}"
    }
    stage('Docker Build') {
        timeout(20){
             //  sh  "sudo make build_shipyard IMAGE_TAG='${BUILD_NUMBER}'"
               sh  "sudo docker build --list 'commit_id=${GERRIT_PATCHSET_REVISION}'-t $(IMAGE_PREFIX)/$(SHIPYARD_IMAGE_NAME):$(IMAGE_TAG) -f images/shipyard/Dockerfile ."
               sh  "sudo docker tag attcomdev/shipyard:${BUILD_NUMBER} ${SHIPYARD_IMAGE}"
        }
    }

    stage('Docker Run') {
        timeout(20){
            sh  "sudo make run_shipyard IMAGE_TAG='${BUILD_NUMBER}'"
        }
    }

    stage('Validate Container') {
        sh 'sudo docker ps'
    }
    stage('Image Publish'){ 
        publish.artifactory ('attcomdev/shipyard', SHIPYARD_IMAGE)
        if (GERRIT_EVENT_TYPE == 'change-merged') {
            sh "sudo docker tag ${SHIPYARD_IMAGE} ${SHIPYARD_IMAGE_LATEST}"
            sh "sudo docker tag ${SHIPYARD_IMAGE} ${SHIPYARD_QUAY_IMAGE_LATEST}"
            publish.artifactory ('attcomdev/shipyard', SHIPYARD_IMAGE_LATEST)
            publish.quay ('attcomdev/shipyard', SHIPYARD_QUAY_IMAGE_LATEST)
        }
    }
}
