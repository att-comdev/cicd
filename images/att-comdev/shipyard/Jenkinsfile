JENKINS_VM_LAUNCH='local-vm-launch'
NODE_NAME="shipyard-${BUILD_NUMBER}"
NODE_TMPL="integration/genesis-single.yaml"

SHIPYARD_VERSION = "${GERRIT_PATCHSET_REVISION}"
SHIPYARD_IMAGE_PS = "ucp-patchset/shipyard:${SHIPYARD_VERSION}"
SHIPYARD_IMAGE = "ucp/shipyard:${SHIPYARD_VERSION}"
SHIPYARD_IMAGE_LATEST = "ucp/shipyard:latest"
SHIPYARD_QUAY_IMAGE_LATEST="attcomdev/shipyard:latest"

vm(NODE_NAME, NODE_TMPL) {
    if(env.GERRIT_NEWREV){
        echo ("${GERRIT_NEWREV} is being used to override refspec: ${GERRIT_REFSPEC}")
        SHIPYARD_VERSION=env.GERRIT_NEWREV
    }
    gerrithub.checkoutAndMerge("att-comdev/shipyard", SHIPYARD_VERSION)
    sh 'sudo apt-get install make'
    stage('Checkout'){
        if (GERRIT_EVENT_TYPE != 'change-merged') {
            SHIPYARD_IMAGE = SHIPYARD_IMAGE_PS
        }
        currentBuild.displayName = "#${BUILD_NUMBER} ${GERRIT_EVENT_TYPE}"
    }
    stage('Docker Build') {
        timeout(20){
               sh  "sudo make build_shipyard LABEL='vcs-ref=${SHIPYARD_VERSION},url=https://github.com/att-comdev/shipyard' IMAGE_TAG='${BUILD_NUMBER}'"
               sh  "sudo docker tag attcomdev/shipyard:${BUILD_NUMBER} ${SHIPYARD_IMAGE}"
        }
    }

    stage('Docker Run') {
        timeout(20){
            sh  "sudo make run_shipyard IMAGE_TAG='${BUILD_NUMBER}'"
        }
    }

    stage('Validate Container') {
        sh "sudo docker inspect ${SHIPYARD_IMAGE}"
    }
    stage('Image Publish'){ 
        publish.artifactory (SHIPYARD_IMAGE, SHIPYARD_IMAGE)
        if (GERRIT_EVENT_TYPE == 'change-merged') {
            publish.artifactory (SHIPYARD_IMAGE, SHIPYARD_IMAGE_LATEST)
            publish.quay (SHIPYARD_IMAGE, SHIPYARD_QUAY_IMAGE_LATEST)
        }
    }
}
