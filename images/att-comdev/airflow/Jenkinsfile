JENKINS_VM_LAUNCH='local-vm-launch'
NODE_NAME="airflow-${env.BUILD_NUMBER}"
NODE_TMPL="integration/genesis-single.yaml"

AIRFLOW_VERSION = "0.1.0-${GERRIT_CHANGE_NUMBER}"
AIRFLOW_PS = "${GERRIT_CHANGE_NUMBER}.${GERRIT_PATCHSET_NUMBER}"
ARTF_URL = env.ARTF_DOCKER_URL
AIRFLOW_IMAGE_PS = "${ARTF_URL}/ucp-patchset/airflow:${AIRFLOW_PS}"
AIRFLOW_IMAGE = "${ARTF_URL}/ucp/airflow:${AIRFLOW_VERSION}"
AIRFLOW_IMAGE_LATEST = "${ARTF_URL}/ucp/airflow:latest"

vm(NODE_NAME, NODE_TMPL) {
    stage('Nodes Wait'){
        def get_hname = {
            sh(returnStdout: true, script: 'echo -n $(hostname)')
        }

        def get_ip = { iface ->
            cmd = "ifconfig ${iface} | grep 'inet addr:' | cut -d: -f2 | awk '{ print \$1}'"
            sh(returnStdout: true, script: cmd).trim()
        }

        timeout (10) {
            node(NODE_NAME) {
                get_hname()
                get_ip('ens3')
            }
        }
    }

    node(NODE_NAME) {
        gerrithub.clone("att-comdev/shipyard", GERRIT_REFSPEC)
        sh 'sudo apt-get install make'
        stage('Checkout'){
            if (GERRIT_EVENT_TYPE != 'change-merged') {
                AIRFLOW_IMAGE = AIRFLOW_IMAGE_PS
            }
            currentBuild.displayName = "${GERRIT_EVENT_TYPE}-${env.BUILD_NUMBER}"
        }
        stage('Docker Build') {
           timeout(20){
               parallel (
                   "stream shipyard" : {
                    node(NODE_NAME){
                        dir("/home/ubuntu/jenkins/workspace/images/att-comdev/airflow/airflow"){
                            sh  "sudo make build_shipyard IMAGE_TAG='${env.BUILD_NUMBER}'"
                        }
               }
           },
                   "stream airflow" : {
                    node(NODE_NAME){
                        dir("/home/ubuntu/jenkins/workspace/images/att-comdev/airflow/airflow"){
                            sh  "sudo make build_airflow IMAGE_TAG='${env.BUILD_NUMBER}'"
                            sh  "sudo docker tag attcomdev/airflow:${env.BUILD_NUMBER} ${AIRFSLOW_IMAGE}"
                        }
                    }
               })
           }
       }

       stage('Docker Run') {

       }

       stage('Validate Container') {

       }

       stage('Publish'){
           withCredentials([usernamePassword(credentialsId: 'jenkins-artifactory',
                    usernameVariable: 'ARTIFACTORY_USER',
                    passwordVariable: 'ARTIFACTORY_PASSWORD')]) {

                opts = '-u $ARTIFACTORY_USER -p $ARTIFACTORY_PASSWORD'

                sh "sudo docker login ${opts} ${ARTF_URL}"
                sh "sudo docker push ${AIRFLOW_IMAGE}"

                if (GERRIT_EVENT_TYPE == 'change-merged') {
                    sh "sudo docker tag ${AIRFLOW_IMAGE} ${AIRFLOW_IMAGE_LATEST}"
                    sh "sudo docker push ${AIRFLOW_IMAGE_LATEST}"
                }
            }
       }
    }
} 