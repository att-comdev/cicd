DOCKER_REGISTRY="${ARTF_DOCKER_URL}"
IMAGE_PREFIX="nc"
IMAGE_NAME="ro"
IMAGE_VERSION="1.0.0"
IMAGE_TAG="${GERRIT_PATCHSET_REVISION}"


vm2('bootstrap.sh', 'cicd-ubuntu-16.04-server-cloudimg-amd64', 'm1.medium', '', 'basic', false) {
    sh 'sudo apt-get -y install make'
    environment {
        JAVA_HOME='/home/jenkins/jdk'
        IMAGE="${DOCKER_REGISTRY}/${IMAGE_PREFIX}/${IMAGE_NAME}:${IMAGE_TAG}"
    }
    stage('Checkout') {
        cleanWs()
        stage('Checkout') {
            cleanWs()

            checkout poll: false,
                scm: [$class: 'GitSCM',
                branches: [[name: 'master']],
                doGenerateSubmoduleConfigurations: false,
                extensions: [[$class: 'RelativeTargetDirectory',
                relativeTargetDir: 'ro-helm']],
                submoduleCfg: [],
                userRemoteConfigs: [[refspec: 'refs/changes/*:refs/changes/*',
                url: '${INTERNAL_GERRIT_SSH}/ro-helm',
                credentialsId:'jenkins-gerrit-mtn5-key']]]

            checkout poll: false,
                scm: [$class: 'GitSCM',
                branches: [[name: 'master']],
                doGenerateSubmoduleConfigurations: false,
                extensions: [[$class: 'RelativeTargetDirectory',
                relativeTargetDir: 'ro-clcp-inventory']],
                submoduleCfg: [],
                userRemoteConfigs: [[refspec: 'refs/changes/*:refs/changes/*',
                url: '${INTERNAL_GERRIT_SSH}/ro-clcp-inventory',
                credentialsId:'jenkins-gerrit-mtn5-key']]]
        }
        stage('Init') {
            dir("${WORKSPACE}/ro-helm/scripts"){
                sh('sudo init.sh')
            }
        }
        stage('Build') {
            echo 'Building RO Image file.'
            dir("${WORKSPACE}/ro-helm"){
                sh('make images')
            }
        }
        stage('Publish') {
            steps {
                echo "publish image to artifactory"
                //script {
                    publish.artifactory (IMAGE, "${IMAGE_PREFIX}/${IMAGE_NAME}:${IMAGE_TAG}")
                    if (GERRIT_EVENT_TYPE == 'change-merged') {
                        publish.artifactory (IMAGE, IMAGE_LATEST)
                    }
                //}
            }
        }
    }
}
