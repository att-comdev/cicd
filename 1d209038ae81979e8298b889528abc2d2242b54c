{
  "comments": [
    {
      "key": {
        "uuid": "2aebde0d_c13344ea",
        "filename": "vars/publish.groovy",
        "patchSetId": 8
      },
      "lineNbr": 116,
      "author": {
        "id": 1011936
      },
      "writtenOn": "2018-11-12T20:28:24Z",
      "side": 1,
      "message": "I would suggest to use ssh-keyscan instead of dsiabling checking",
      "revId": "1d209038ae81979e8298b889528abc2d2242b54c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f5d3666_3ac9ffce",
        "filename": "vars/publish.groovy",
        "patchSetId": 8
      },
      "lineNbr": 116,
      "author": {
        "id": 1015253
      },
      "writtenOn": "2018-11-12T20:33:04Z",
      "side": 1,
      "message": "will this somehow improve security? we will get the same situation if host is replaced.\nRight way to do this is to store public key of server in variable in jenkins and put it to know_hosts each time.",
      "parentUuid": "2aebde0d_c13344ea",
      "revId": "1d209038ae81979e8298b889528abc2d2242b54c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64ec9d30_42650334",
        "filename": "vars/publish.groovy",
        "patchSetId": 8
      },
      "lineNbr": 116,
      "author": {
        "id": 1014546
      },
      "writtenOn": "2018-11-13T00:38:19Z",
      "side": 1,
      "message": "Fixed with https://review.gerrithub.io/c/att-comdev/cicd/+/432929/2",
      "parentUuid": "6f5d3666_3ac9ffce",
      "revId": "1d209038ae81979e8298b889528abc2d2242b54c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b0f1e93_bb5ee3a1",
        "filename": "vars/publish.groovy",
        "patchSetId": 8
      },
      "lineNbr": 117,
      "author": {
        "id": 1015253
      },
      "writtenOn": "2018-11-12T20:29:58Z",
      "side": 1,
      "message": "Please use username from your credentials data like here\n     withCredentials([sshUserPrivateKey(credentialsId: creds,                   \n         keyFileVariable: \u0027SSH_KEY\u0027,                                            \n         usernameVariable: \u0027SSH_USER\u0027)]) {}",
      "range": {
        "startLine": 113,
        "startChar": 1,
        "endLine": 117,
        "endChar": 93
      },
      "revId": "1d209038ae81979e8298b889528abc2d2242b54c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f30f33ce_6a499a2c",
        "filename": "vars/publish.groovy",
        "patchSetId": 8
      },
      "lineNbr": 117,
      "author": {
        "id": 1014546
      },
      "writtenOn": "2018-11-13T00:38:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b0f1e93_bb5ee3a1",
      "range": {
        "startLine": 113,
        "startChar": 1,
        "endLine": 117,
        "endChar": 93
      },
      "revId": "1d209038ae81979e8298b889528abc2d2242b54c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}