currentBuild.displayName = "#${BUILD_NUMBER} ${GERRIT_EVENT_TYPE}"

node("att-comdev-charts"){
    stage('Project Checkout'){
        cleanWs()
        if(env.GERRIT_NEWREV){
            gerrithub.cloneToBranch(GERRIT_PROJECT, GERRIT_NEWREV, "jenkins")
        } else {
            gerrithub.cloneToBranch(GERRIT_PROJECT, GERRIT_PATCHSET_REVISION, "jenkins")
            dir("${WORKSPACE}/jenkins"){
                gerrit.rebase()
            }
        }
        dir("${WORKSPACE}/jenkins"){
            def file_location=""
            //Remove after divingbell is updated
            if("${JOB_BASE_NAME}" == "divingbell"){
                file_location = "${JOB_BASE_NAME}/Chart.yaml"
            } else {
                file_location = "charts/${JOB_BASE_NAME}/Chart.yaml"
            }
            GIT_COMMIT = sh(returnStdout: true, script: 'git rev-parse HEAD').trim()
            def chartVersion = readYaml file: file_location
            def chartOverride = readYaml file: file_location, text: "version: 0.9.${BUILD_NUMBER}-"+GIT_COMMIT
            sh "sudo rm -rf ${file_location}"
            writeYaml file: file_location, data: chartOverride
        }
    }
    stage('Make and Publish Charts'){
        dir("${WORKSPACE}/jenkins"){
            def status = sh(returnStatus: true, script: "sudo make ${JOB_BASE_NAME}")
            if (status != 0) {
                currentBuild.result = 'FAILED'
                notify.msg("Charts build failed for ${GERRIT_CHANGE_NUMBER}!")
            }else{
                notify.msg("Charts were built for ${GERRIT_CHANGE_NUMBER}")
            }
            if(status == 0){
                if ( GERRIT_EVENT_TYPE == 'change-merged' ){
                    ARTF_REPO="charts/att-comdev/${JOB_BASE_NAME}/"
                } else {
                    ARTF_REPO="charts/att-comdev/patchsets/${JOB_BASE_NAME}/"
                }
                def server = Artifactory.server 'artifactory'
                def uploadSpec = """{"files": [{"pattern":"*${JOB_BASE_NAME}*0.9.${BUILD_NUMBER}*.tgz","target":"${ARTF_REPO}"}]}"""
                server.upload(uploadSpec)
                if ( GERRIT_EVENT_TYPE == 'change-merged' ){
                    publish.setProperty ('jenkins-artifactory', '${ARTF_API_URL}/clcp-manifests', "${RELEASE_CURRENT_KEY}=${ARTF_WEB_URL}/${ARTF_REPO}${JOB_BASE_NAME}-0.9.${BUILD_NUMBER}-${GIT_COMMIT}.tgz")
                    publish.setProperty ('jenkins-artifactory', '${ARTF_API_URL}/clcp-manifests', "${RELEASE_STATUS_KEY}=NoStatus")
                }
                notify.msg("Charts from ${GERRIT_PROJECT} pushed to ${ARTF_REPO}")
            }
        }
    }
}
